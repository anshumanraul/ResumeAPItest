[
  {
    "ContainingType": "backend.Controllers.CandidateController",
    "Method": "CreateCandidate",
    "RelativePath": "api/Candidate/Create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "FirstName",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "LastName",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Email",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "Phone",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "CoverLetter",
        "Type": "System.String",
        "IsRequired": false
      },
      {
        "Name": "JobId",
        "Type": "System.Int64",
        "IsRequired": false
      },
      {
        "Name": "pdfFile",
        "Type": "Microsoft.AspNetCore.Http.IFormFile",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.CandidateController",
    "Method": "DownloadPdfFile",
    "RelativePath": "api/Candidate/download/{url}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "url",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.CandidateController",
    "Method": "GetCandidtaes",
    "RelativePath": "api/Candidate/Get",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.Candidate.CandidateGetDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.CandidateController",
    "Method": "GetCandidateById",
    "RelativePath": "api/Candidate/Get{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Core.Dtos.Candidate.CandidateGetDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.CompanyController",
    "Method": "CreateCompany",
    "RelativePath": "api/Company/Create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "backend.Core.Dtos.Company.CompanyCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.CompanyController",
    "Method": "GetCompanies",
    "RelativePath": "api/Company/Get",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.Company.CompanyGetDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.CompanyController",
    "Method": "GetCompanyById",
    "RelativePath": "api/Company/Get/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Core.Dtos.Company.CompanyGetDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.JobController",
    "Method": "CreateJob",
    "RelativePath": "api/Job/Create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "backend.Core.Dtos.Job.JobCreateDto",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "backend.Controllers.JobController",
    "Method": "GetJobs",
    "RelativePath": "api/Job/Get",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.Core.Dtos.Job.JobGetDto, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.JobController",
    "Method": "GetJobById",
    "RelativePath": "api/Job/Get{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "backend.Core.Dtos.Job.JobGetDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "backend.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[backend.WeatherForecast, backend, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]